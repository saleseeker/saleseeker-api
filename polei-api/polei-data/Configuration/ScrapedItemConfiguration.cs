// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace polei_data
{
    // ScrapedItem
    public class ScrapedItemConfiguration : IEntityTypeConfiguration<ScrapedItem>
    {
        public void Configure(EntityTypeBuilder<ScrapedItem> builder)
        {
            builder.ToTable("ScrapedItem", "dbo");
            builder.HasKey(x => x.ScrapedItemId).HasName("PK_ScrapedItem").IsClustered();

            builder.Property(x => x.ScrapedItemId).HasColumnName(@"ScrapedItemID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.SiteItemId).HasColumnName(@"SiteItemID").HasColumnType("int").IsRequired();
            builder.Property(x => x.PriceIncVat).HasColumnName(@"PriceIncVAT").HasColumnType("numeric(10,2)").HasPrecision(10,2).IsRequired();
            builder.Property(x => x.PriceExVat).HasColumnName(@"PriceExVAT").HasColumnType("numeric(10,2)").HasPrecision(10,2).IsRequired(false);
            builder.Property(x => x.ScrapedDateTime).HasColumnName(@"ScrapedDateTime").HasColumnType("datetime").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.SiteItem).WithMany(b => b.ScrapedItems).HasForeignKey(c => c.SiteItemId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ScrapedItem_SiteItem");
        }
    }

}
// </auto-generated>
