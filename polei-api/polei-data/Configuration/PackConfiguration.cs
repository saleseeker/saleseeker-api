// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace polei_data
{
    // Pack
    public class PackConfiguration : IEntityTypeConfiguration<Pack>
    {
        public void Configure(EntityTypeBuilder<Pack> builder)
        {
            builder.ToTable("Pack", "dbo");
            builder.HasKey(x => x.PackId).HasName("PK_Pack").IsClustered();

            builder.Property(x => x.PackId).HasColumnName(@"PackID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.PackName).HasColumnName(@"PackName").HasColumnType("varchar(100)").IsRequired().IsUnicode(false).HasMaxLength(100);
            builder.Property(x => x.ItemTypeId).HasColumnName(@"ItemTypeID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ItemCount).HasColumnName(@"ItemCount").HasColumnType("int").IsRequired();
            builder.Property(x => x.ItemQuantity).HasColumnName(@"ItemQuantity").HasColumnType("numeric(8,2)").HasPrecision(8,2).IsRequired(false);
            builder.Property(x => x.ItemQuantityUnitId).HasColumnName(@"ItemQuantityUnitID").HasColumnType("int").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.ItemType).WithMany(b => b.Packs).HasForeignKey(c => c.ItemTypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Pack_ItemType");
            builder.HasOne(a => a.Unit).WithMany(b => b.Packs).HasForeignKey(c => c.ItemQuantityUnitId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Pack_Unit");
        }
    }

}
// </auto-generated>
